// Generated by BUCKLESCRIPT VERSION 4.0.8, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Yaml = require("./Yaml.bs.js");
var Block = require("bs-platform/lib/js/block.js");

Jest.test("Boolean", (function (param) {
        return Jest.Expect[/* toEqual */12](/* Bool */Block.__(0, [true]), Jest.Expect[/* expect */0](Yaml.parse("true")));
      }));

Jest.test("Boolean", (function (param) {
        return Jest.Expect[/* toEqual */12](/* Bool */Block.__(0, [false]), Jest.Expect[/* expect */0](Yaml.parse("false")));
      }));

Jest.test("Float", (function (param) {
        return Jest.Expect[/* toEqual */12](/* Float */Block.__(1, [1]), Jest.Expect[/* expect */0](Yaml.parse("1")));
      }));

Jest.test("String", (function (param) {
        return Jest.Expect[/* toEqual */12](/* String */Block.__(2, ["tenis"]), Jest.Expect[/* expect */0](Yaml.parse("tenis")));
      }));

Jest.test("Array", (function (param) {
        return Jest.Expect[/* toEqual */12](/* Array */Block.__(3, [/* :: */[
                        /* String */Block.__(2, ["tenis"]),
                        /* [] */0
                      ]]), Jest.Expect[/* expect */0](Yaml.parse("- tenis")));
      }));

Jest.test("Array", (function (param) {
        return Jest.Expect[/* toEqual */12](/* Array */Block.__(3, [/* :: */[
                        /* String */Block.__(2, ["tenis"]),
                        /* :: */[
                          /* String */Block.__(2, ["aloha"]),
                          /* [] */0
                        ]
                      ]]), Jest.Expect[/* expect */0](Yaml.parse("- tenis\n- aloha")));
      }));

Jest.test("Object", (function (param) {
        return Jest.Expect[/* toEqual */12](/* Object */Block.__(4, [/* :: */[
                        /* tuple */[
                          "tenis",
                          /* Float */Block.__(1, [1])
                        ],
                        /* [] */0
                      ]]), Jest.Expect[/* expect */0](Yaml.parse("tenis: 1")));
      }));

Jest.test("More complex object", (function (param) {
        return Jest.Expect[/* toEqual */12](/* Object */Block.__(4, [/* :: */[
                        /* tuple */[
                          "first",
                          /* Float */Block.__(1, [1])
                        ],
                        /* :: */[
                          /* tuple */[
                            "second",
                            /* Array */Block.__(3, [/* :: */[
                                  /* Float */Block.__(1, [1]),
                                  /* :: */[
                                    /* String */Block.__(2, ["str"]),
                                    /* [] */0
                                  ]
                                ]])
                          ],
                          /* :: */[
                            /* tuple */[
                              "third",
                              /* Object */Block.__(4, [/* :: */[
                                    /* tuple */[
                                      "here",
                                      /* Float */Block.__(1, [2])
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        "there",
                                        /* Bool */Block.__(0, [true])
                                      ],
                                      /* [] */0
                                    ]
                                  ]])
                            ],
                            /* [] */0
                          ]
                        ]
                      ]]), Jest.Expect[/* expect */0](Yaml.parse("first: 1\nsecond:\n - 1\n - str\nthird:\n here: 2\n there: true")));
      }));

Jest.test("Stringify Float", (function (param) {
        return Jest.Expect[/* toEqual */12]("10\n", Jest.Expect[/* expect */0](Yaml.stringify(/* Float */Block.__(1, [10]))));
      }));

Jest.test("Stringify String", (function (param) {
        return Jest.Expect[/* toEqual */12]("Ahoj\n", Jest.Expect[/* expect */0](Yaml.stringify(/* String */Block.__(2, ["Ahoj"]))));
      }));

Jest.test("Stringify Array", (function (param) {
        return Jest.Expect[/* toEqual */12]("- 1\n- 2\n", Jest.Expect[/* expect */0](Yaml.stringify(/* Array */Block.__(3, [/* :: */[
                                /* Float */Block.__(1, [1]),
                                /* :: */[
                                  /* Float */Block.__(1, [2]),
                                  /* [] */0
                                ]
                              ]]))));
      }));

Jest.test("Stringify Object", (function (param) {
        return Jest.Expect[/* toEqual */12]("first: 1\nsecond:\n  - 1\n  - str\nthird:\n  here: 2\n", Jest.Expect[/* expect */0](Yaml.stringify(/* Object */Block.__(4, [/* :: */[
                                /* tuple */[
                                  "first",
                                  /* Float */Block.__(1, [1])
                                ],
                                /* :: */[
                                  /* tuple */[
                                    "second",
                                    /* Array */Block.__(3, [/* :: */[
                                          /* Float */Block.__(1, [1]),
                                          /* :: */[
                                            /* String */Block.__(2, ["str"]),
                                            /* [] */0
                                          ]
                                        ]])
                                  ],
                                  /* :: */[
                                    /* tuple */[
                                      "third",
                                      /* Object */Block.__(4, [/* :: */[
                                            /* tuple */[
                                              "here",
                                              /* Float */Block.__(1, [2])
                                            ],
                                            /* [] */0
                                          ]])
                                    ],
                                    /* [] */0
                                  ]
                                ]
                              ]]))));
      }));

Jest.test("Comments", (function (param) {
        return Jest.Expect[/* toEqual */12]("<<: more\nsrani: 1\n", Jest.Expect[/* expect */0](Yaml.stringify(Yaml.parse("<<: more\n# whaat\nsrani: 1\n"))));
      }));

Jest.test("Empty yaml", (function (param) {
        return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* expect */0](Yaml.stringify(Yaml.parse(""))));
      }));

Jest.test("Only one comment yaml", (function (param) {
        return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* expect */0](Yaml.stringify(Yaml.parse("# comment"))));
      }));

/*  Not a pure module */
